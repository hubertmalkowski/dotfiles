if vim.g.colors_name then
  vim.cmd.hi 'clear'
else
end
vim.g['colors_name'] = 'carbonite'
vim.o['termguicolors'] = true

local carbon_dark = {
  layer1 = '#161616', -- layer 1
  layer2 = '#393939', -- layer 2
  text = '#f4f4f4', -- text primary
  text_sec = '#c6c6c6', -- text secondary
  brightish_whitish = '#f4f4f4', -- cursor
  base05 = '#f4f4f4', -- don't really know
  white = '#ffffff', -- delimeter
  blue = '#33b1ff', -- methods, macros and some other stuff
  highlight_blue = '#304f8d',
  purple = '#be95ff', -- function declarations and some keywords
  pinkish = '#be95ff', -- keywords I guess
  base10 = '#ff8389', -- errors
  base11 = '#be95ff', -- cmp stuff ???
  base12 = '#33b1ff',
  base13 = '#42be65',
  base14 = '#ff832b',
  base15 = '#3ddbd9',
  none = 'NONE',
}

local carbon_light = {
  base01 = '',
  base02 = '',
  base03 = '',
  base04 = '',
  base05 = '',
  base06 = '',
  base07 = '',
  base08 = '',
  base09 = '',
  base10 = '',
  base11 = '',
  base12 = '',
  base13 = '',
  base14 = '',
  base15 = '',
  none = 'NONE',
}

local carbon = ((vim.o.background == 'dark') and carbon_dark or carbon_light)

do
end
(vim.g)['terminal_color_0'] = carbon.layer2
vim.g['terminal_color_1'] = carbon.base11
vim.g['terminal_color_2'] = carbon.base14
vim.g['terminal_color_3'] = carbon.base13
vim.g['terminal_color_4'] = carbon.pinkish
vim.g['terminal_color_5'] = carbon.base15
vim.g['terminal_color_6'] = carbon.purple
vim.g['terminal_color_7'] = carbon.base05
vim.g['terminal_color_8'] = carbon.text_sec
vim.g['terminal_color_9'] = carbon.base11
vim.g['terminal_color_10'] = carbon.base14
vim.g['terminal_color_11'] = carbon.base13
vim.g['terminal_color_12'] = carbon.pinkish
vim.g['terminal_color_13'] = carbon.base15
vim.g['terminal_color_14'] = carbon.blue
vim.g['terminal_color_15'] = carbon.white
vim.api.nvim_set_hl(0, 'ColorColumn', { fg = carbon.none, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'Cursor', { fg = carbon.layer1, bg = carbon.brightish_whitish })
vim.api.nvim_set_hl(0, 'CursorLine', { fg = carbon.none, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'CursorColumn', { fg = carbon.none, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'CursorLineNr', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'QuickFixLine', { fg = carbon.none, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'Error', { fg = carbon.base10, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'LineNr', { fg = carbon.text_sec, bg = carbon.layer1 })
vim.api.nvim_set_hl(0, 'NonText', { fg = carbon.text, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Normal', { fg = carbon.brightish_whitish, bg = carbon.layer1 })
vim.api.nvim_set_hl(0, 'Pmenu', { fg = carbon.brightish_whitish, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'PmenuSbar', { fg = carbon.brightish_whitish, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'PmenuSel', { fg = carbon.purple, bg = carbon.text })
vim.api.nvim_set_hl(0, 'PmenuThumb', { fg = carbon.purple, bg = carbon.text })
vim.api.nvim_set_hl(0, 'SpecialKey', { fg = carbon.text_sec, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Visual', { fg = carbon.none, bg = carbon.text })
vim.api.nvim_set_hl(0, 'VisualNOS', { fg = carbon.none, bg = carbon.text })
vim.api.nvim_set_hl(0, 'TooLong', { fg = carbon.none, bg = carbon.text })
vim.api.nvim_set_hl(0, 'Debug', { fg = carbon.base13, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Macro', { fg = carbon.blue, bg = carbon.none })
vim.api.nvim_set_hl(0, 'MatchParen', { fg = carbon.none, bg = carbon.text, underline = true })
vim.api.nvim_set_hl(0, 'Bold', { fg = carbon.none, bg = carbon.none, bold = true })
vim.api.nvim_set_hl(0, 'Italic', { fg = carbon.none, bg = carbon.none, italic = true })
vim.api.nvim_set_hl(0, 'Underlined', { fg = carbon.none, bg = carbon.none, underline = true })
vim.api.nvim_set_hl(0, 'DiagnosticWarn', { fg = carbon.base14, bg = carbon.none })
vim.api.nvim_set_hl(0, 'DiagnosticError', { fg = carbon.base10, bg = carbon.none })
vim.api.nvim_set_hl(0, 'DiagnosticInfo', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'DiagnosticHint', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'DiagnosticUnderlineWarn', { fg = carbon.base14, bg = carbon.none, undercurl = true })
vim.api.nvim_set_hl(0, 'DiagnosticUnderlineError', { fg = carbon.base10, bg = carbon.none, undercurl = true })
vim.api.nvim_set_hl(0, 'DiagnosticUnderlineInfo', { fg = carbon.brightish_whitish, bg = carbon.none, undercurl = true })
vim.api.nvim_set_hl(0, 'DiagnosticUnderlineHint', { fg = carbon.brightish_whitish, bg = carbon.none, undercurl = true })
vim.api.nvim_set_hl(0, 'HealthError', { fg = carbon.base10, bg = carbon.none })
vim.api.nvim_set_hl(0, 'HealthWarning', { fg = carbon.base14, bg = carbon.none })
vim.api.nvim_set_hl(0, 'HealthSuccess', { fg = carbon.base13, bg = carbon.none })
vim.api.nvim_set_hl(0, '@comment', { link = 'Comment' })
vim.api.nvim_set_hl(0, '@text.literal.commodity', { fg = carbon.base13, bg = carbon.none })
vim.api.nvim_set_hl(0, '@number', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@number.date', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, '@number.date.effective', { fg = carbon.base13, bg = carbon.none })
vim.api.nvim_set_hl(0, '@number.interval', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@number.status', { fg = carbon.base12, bg = carbon.none })
vim.api.nvim_set_hl(0, '@number.quantity', { fg = carbon.base11, bg = carbon.none })
vim.api.nvim_set_hl(0, '@number.quantity.negative', { fg = carbon.base10, bg = carbon.none })
vim.api.nvim_set_hl(0, 'LspCodeLens', { fg = carbon.none, bg = carbon.text_sec })
vim.api.nvim_set_hl(0, 'LspReferenceText', { fg = carbon.none, bg = carbon.highlight_blue })
vim.api.nvim_set_hl(0, 'LspReferenceread', { fg = carbon.none, bg = carbon.highlight_blue })
vim.api.nvim_set_hl(0, 'LspReferenceWrite', { fg = carbon.none, bg = carbon.highlight_blue })
vim.api.nvim_set_hl(0, 'LspSignatureActiveParameter', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, '@lsp.type.class', { link = 'Structure' })
vim.api.nvim_set_hl(0, '@lsp.type.decorator', { link = 'Decorator' })
vim.api.nvim_set_hl(0, '@lsp.type.function', { link = '@function' })
vim.api.nvim_set_hl(0, '@lsp.type.macro', { link = 'Macro' })
vim.api.nvim_set_hl(0, '@lsp.type.method', { link = '@function' })
vim.api.nvim_set_hl(0, '@lsp.type.struct', { link = 'Structure' })
vim.api.nvim_set_hl(0, '@lsp.type.type', { link = 'Type' })
vim.api.nvim_set_hl(0, '@lsp.type.typeParameter', { link = 'Typedef' })
vim.api.nvim_set_hl(0, '@lsp.type.selfParameter', { link = '@variable.builtin' })
vim.api.nvim_set_hl(0, '@lsp.type.builtinConstant', { link = '@constant.builtin' })
vim.api.nvim_set_hl(0, '@lsp.type.magicFunction', { link = '@function.builtin' })
vim.api.nvim_set_hl(0, '@lsp.type.boolean', { link = '@boolean' })
vim.api.nvim_set_hl(0, '@lsp.type.builtinType', { link = '@type.builtin' })
vim.api.nvim_set_hl(0, '@lsp.type.comment', { link = '@comment' })
vim.api.nvim_set_hl(0, '@lsp.type.enum', { link = '@type' })
vim.api.nvim_set_hl(0, '@lsp.type.enumMember', { link = '@constant' })
vim.api.nvim_set_hl(0, '@lsp.type.escapeSequence', { link = '@string.escape' })
vim.api.nvim_set_hl(0, '@lsp.type.formatSpecifier', { link = '@punctuation.special' })
vim.api.nvim_set_hl(0, '@lsp.type.keyword', { link = '@keyword' })
vim.api.nvim_set_hl(0, '@lsp.type.namespace', { link = '@namespace' })
vim.api.nvim_set_hl(0, '@lsp.type.number', { link = '@number' })
vim.api.nvim_set_hl(0, '@lsp.type.operator', { link = '@operator' })
vim.api.nvim_set_hl(0, '@lsp.type.parameter', { link = '@parameter' })
vim.api.nvim_set_hl(0, '@lsp.type.property', { link = '@property' })
vim.api.nvim_set_hl(0, '@lsp.type.selfKeyword', { link = '@variable.builtin' })
vim.api.nvim_set_hl(0, '@lsp.type.string.rust', { link = '@string' })
vim.api.nvim_set_hl(0, '@lsp.type.typeAlias', { link = '@type.definition' })
vim.api.nvim_set_hl(0, '@lsp.type.unresolvedReference', { link = 'Error' })
vim.api.nvim_set_hl(0, '@lsp.type.variable', { link = '@variable' })
vim.api.nvim_set_hl(0, '@lsp.mod.readonly', { link = '@constant' })
vim.api.nvim_set_hl(0, '@lsp.mod.typeHint', { link = 'Type' })
vim.api.nvim_set_hl(0, '@lsp.mod.builtin', { link = 'Special' })
vim.api.nvim_set_hl(0, '@lsp.typemod.class.defaultLibrary', { link = '@type.builtin' })
vim.api.nvim_set_hl(0, '@lsp.typemod.enum.defaultLibrary', { link = '@type.builtin' })
vim.api.nvim_set_hl(0, '@lsp.typemod.enumMember.defaultLibrary', { link = '@constant.builtin' })
vim.api.nvim_set_hl(0, '@lsp.typemod.function.defaultLibrary', { link = '@function.builtin' })
vim.api.nvim_set_hl(0, '@lsp.typemod.keyword.async', { link = '@keyword.coroutine' })
vim.api.nvim_set_hl(0, '@lsp.typemod.macro.defaultLibrary', { link = '@function.builtin' })
vim.api.nvim_set_hl(0, '@lsp.typemod.method.defaultLibrary', { link = '@function.builtin' })
vim.api.nvim_set_hl(0, '@lsp.typemod.operator.injected', { link = '@operator' })
vim.api.nvim_set_hl(0, '@lsp.typemod.string.injected', { link = '@string' })
vim.api.nvim_set_hl(0, '@lsp.typemod.operator.controlFlow', { link = '@exception' })
vim.api.nvim_set_hl(0, '@lsp.typemod.keyword.documentation', { link = 'Special' })
vim.api.nvim_set_hl(0, '@lsp.typemod.variable.global', { link = '@constant' })
vim.api.nvim_set_hl(0, '@lsp.typemod.variable.static', { link = '@constant' })
vim.api.nvim_set_hl(0, '@lsp.typemod.variable.defaultLibrary', { link = 'Special' })
vim.api.nvim_set_hl(0, '@lsp.typemod.function.builtin', { link = '@function.builtin' })
vim.api.nvim_set_hl(0, '@lsp.typemod.function.readonly', { link = '@method' })
vim.api.nvim_set_hl(0, '@lsp.typemod.variable.defaultLibrary', { link = '@variable.builtin' })
vim.api.nvim_set_hl(0, '@lsp.typemod.variable.injected', { link = '@variable' })
vim.api.nvim_set_hl(0, 'Folded', { fg = carbon.text, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'FoldColumn', { fg = carbon.layer2, bg = carbon.layer1 })
vim.api.nvim_set_hl(0, 'SignColumn', { fg = carbon.layer2, bg = carbon.layer1 })
vim.api.nvim_set_hl(0, 'Directory', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, 'EndOfBuffer', { fg = carbon.layer2, bg = carbon.none })
vim.api.nvim_set_hl(0, 'ErrorMsg', { fg = carbon.base10, bg = carbon.none })
vim.api.nvim_set_hl(0, 'ModeMsg', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'MoreMsg', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Question', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Substitute', { fg = carbon.layer2, bg = carbon.purple })
vim.api.nvim_set_hl(0, 'WarningMsg', { fg = carbon.base14, bg = carbon.none })
vim.api.nvim_set_hl(0, 'WildMenu', { fg = carbon.purple, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'helpHyperTextJump', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, 'helpSpecial', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'helpHeadline', { fg = carbon.base10, bg = carbon.none })
vim.api.nvim_set_hl(0, 'helpHeader', { fg = carbon.base15, bg = carbon.none })
vim.api.nvim_set_hl(0, 'DiffAdded', { fg = carbon.blue, bg = carbon.none })
vim.api.nvim_set_hl(0, 'DiffChanged', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'DiffRemoved', { fg = carbon.base10, bg = carbon.none })
vim.api.nvim_set_hl(0, 'DiffAdd', { bg = '#122f2f', fg = carbon.none })
vim.api.nvim_set_hl(0, 'DiffChange', { bg = '#222a39', fg = carbon.none })
vim.api.nvim_set_hl(0, 'DiffText', { bg = '#2f3f5c', fg = carbon.none })
vim.api.nvim_set_hl(0, 'DiffDelete', { bg = '#361c28', fg = carbon.none })
vim.api.nvim_set_hl(0, 'IncSearch', { fg = carbon.white, bg = carbon.base10 })
vim.api.nvim_set_hl(0, 'Search', { fg = carbon.layer2, bg = carbon.purple })
vim.api.nvim_set_hl(0, 'TabLine', { link = 'StatusLineNC' })
vim.api.nvim_set_hl(0, 'TabLineFill', { link = 'TabLine' })
vim.api.nvim_set_hl(0, 'TabLineSel', { link = 'StatusLine' })
vim.api.nvim_set_hl(0, 'Title', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'VertSplit', { fg = carbon.layer2, bg = carbon.layer1 })
vim.api.nvim_set_hl(0, 'WinSeparator', { fg = carbon.layer2, bg = carbon.layer1 })
vim.api.nvim_set_hl(0, 'Boolean', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Character', { fg = carbon.base14, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Comment', { fg = carbon.text_sec, bg = carbon.none, italic = true })
vim.api.nvim_set_hl(0, 'Conceal', { fg = carbon.none, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Conditional', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Constant', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Decorator', { fg = carbon.base12, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Define', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Delimeter', { fg = carbon.white, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Exception', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Float', { link = 'Number' })
vim.api.nvim_set_hl(0, 'Function', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Identifier', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Include', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Keyword', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Label', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Number', { fg = carbon.base15, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Operator', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'PreProc', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Repeat', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Special', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'SpecialChar', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'SpecialComment', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Statement', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'StorageClass', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'String', { fg = carbon.base13, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Structure', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Tag', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Todo', { fg = carbon.base13, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Type', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'Typedef', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'markdownBlockquote', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, 'markdownBold', { link = 'Bold' })
vim.api.nvim_set_hl(0, 'markdownItalic', { link = 'Italic' })
vim.api.nvim_set_hl(0, 'markdownBoldItalic', { fg = carbon.none, bg = carbon.none, bold = true, italic = true })
vim.api.nvim_set_hl(0, 'markdownRule', { link = 'Comment' })
vim.api.nvim_set_hl(0, 'markdownH1', { fg = carbon.base10, bg = carbon.none })
vim.api.nvim_set_hl(0, 'markdownH2', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'markdownH3', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'markdownH4', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'markdownH5', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'markdownH6', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'markdownHeadingDelimiter', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'markdownHeadingRule', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'markdownUrl', { fg = carbon.base14, bg = carbon.none, underline = true })
vim.api.nvim_set_hl(0, 'markdownCode', { link = 'String' })
vim.api.nvim_set_hl(0, 'markdownCodeBlock', { link = 'markdownCode' })
vim.api.nvim_set_hl(0, 'markdownCodeDelimiter', { link = 'markdownCode' })
vim.api.nvim_set_hl(0, 'markdownUrl', { link = 'String' })
vim.api.nvim_set_hl(0, 'markdownListMarker', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, 'markdownOrderedListMarker', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, 'asciidocAttributeEntry', { fg = carbon.base15, bg = carbon.none })
vim.api.nvim_set_hl(0, 'asciidocAttributeList', { link = 'asciidocAttributeEntry' })
vim.api.nvim_set_hl(0, 'asciidocAttributeRef', { link = 'asciidocAttributeEntry' })
vim.api.nvim_set_hl(0, 'asciidocHLabel', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'asciidocOneLineTitle', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'asciidocQuotedMonospaced', { link = 'markdownBlockquote' })
vim.api.nvim_set_hl(0, 'asciidocURL', { link = 'markdownUrl' })
vim.api.nvim_set_hl(0, '@comment', { link = 'Comment' })
vim.api.nvim_set_hl(0, '@error', { fg = carbon.base11, bg = carbon.none })
vim.api.nvim_set_hl(0, '@operator', { link = 'Operator' })
vim.api.nvim_set_hl(0, '@punctuation.delimiter', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, '@punctuation.bracket', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, '@punctuation.special', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, '@string', { link = 'String' })
vim.api.nvim_set_hl(0, '@string.regex', { fg = carbon.blue, bg = carbon.none })
vim.api.nvim_set_hl(0, '@string.escape', { fg = carbon.base15, bg = carbon.none })
vim.api.nvim_set_hl(0, '@character', { link = 'Character' })
vim.api.nvim_set_hl(0, '@boolean', { link = 'Boolean' })
vim.api.nvim_set_hl(0, '@number', { link = 'Number' })
vim.api.nvim_set_hl(0, '@float', { link = 'Float' })
vim.api.nvim_set_hl(0, '@function', { fg = carbon.base12, bg = carbon.none, bold = true })
vim.api.nvim_set_hl(0, '@function.builtin', { fg = carbon.base12, bg = carbon.none })
vim.api.nvim_set_hl(0, '@function.macro', { fg = carbon.blue, bg = carbon.none })
vim.api.nvim_set_hl(0, '@method', { fg = carbon.blue, bg = carbon.none })
vim.api.nvim_set_hl(0, '@constructor', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@parameter', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@keyword', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@keyword.function', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, '@keyword.operator', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, '@conditional', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@repeat', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@label', { fg = carbon.base15, bg = carbon.none })
vim.api.nvim_set_hl(0, '@include', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@exception', { fg = carbon.base15, bg = carbon.none })
vim.api.nvim_set_hl(0, '@type', { link = 'Type' })
vim.api.nvim_set_hl(0, '@type.builtin', { link = 'Type' })
vim.api.nvim_set_hl(0, '@attribute', { fg = carbon.base15, bg = carbon.none })
vim.api.nvim_set_hl(0, '@field', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@property', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@variable', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@variable.builtin', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@constant', { fg = carbon.base14, bg = carbon.none })
vim.api.nvim_set_hl(0, '@constant.builtin', { fg = carbon.blue, bg = carbon.none })
vim.api.nvim_set_hl(0, '@constant.macro', { fg = carbon.blue, bg = carbon.none })
vim.api.nvim_set_hl(0, '@namespace', { fg = carbon.blue, bg = carbon.none })
vim.api.nvim_set_hl(0, '@symbol', { fg = carbon.base15, bg = carbon.none, bold = true })
vim.api.nvim_set_hl(0, '@text', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@text.strong', { fg = carbon.none, bg = carbon.none })
vim.api.nvim_set_hl(0, '@text.emphasis', { fg = carbon.base10, bg = carbon.none, bold = true })
vim.api.nvim_set_hl(0, '@text.underline', { fg = carbon.base10, bg = carbon.none, underline = true })
vim.api.nvim_set_hl(0, '@text.strike', { fg = carbon.base10, bg = carbon.none, strikethrough = true })
vim.api.nvim_set_hl(0, '@text.title', { fg = carbon.base10, bg = carbon.none })
vim.api.nvim_set_hl(0, '@text.literal', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@text.uri', { fg = carbon.base14, bg = carbon.none, underline = true })
vim.api.nvim_set_hl(0, '@tag', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, '@tag.attribute', { fg = carbon.base15, bg = carbon.none })
vim.api.nvim_set_hl(0, '@tag.delimiter', { fg = carbon.base15, bg = carbon.none })
vim.api.nvim_set_hl(0, '@reference', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NvimInternalError', { fg = carbon.layer1, bg = carbon.purple })
vim.api.nvim_set_hl(0, 'NormalFloat', { fg = carbon.base05, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'FloatBorder', { fg = carbon.layer1, bg = carbon.layer1 })
vim.api.nvim_set_hl(0, 'NormalNC', { fg = carbon.base05, bg = carbon.layer1 })
vim.api.nvim_set_hl(0, 'TermCursor', { fg = carbon.layer1, bg = carbon.brightish_whitish })
vim.api.nvim_set_hl(0, 'TermCursorNC', { fg = carbon.layer1, bg = carbon.brightish_whitish })
vim.api.nvim_set_hl(0, 'StatusLine', { fg = carbon.brightish_whitish, bg = carbon.layer1 })
vim.api.nvim_set_hl(0, 'StatusLineNC', { fg = carbon.brightish_whitish, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'StatusReplace', { fg = carbon.layer1, bg = carbon.purple })
vim.api.nvim_set_hl(0, 'StatusInsert', { fg = carbon.layer1, bg = carbon.base12 })
vim.api.nvim_set_hl(0, 'StatusVisual', { fg = carbon.layer1, bg = carbon.base14 })
vim.api.nvim_set_hl(0, 'StatusTerminal', { fg = carbon.layer1, bg = carbon.base11 })
vim.api.nvim_set_hl(0, 'StatusNormal', { fg = carbon.layer1, bg = carbon.base15 })
vim.api.nvim_set_hl(0, 'StatusCommand', { fg = carbon.layer1, bg = carbon.base13 })
vim.api.nvim_set_hl(0, 'StatusLineDiagnosticWarn', { fg = carbon.base14, bg = carbon.layer1, bold = true })
vim.api.nvim_set_hl(0, 'StatusLineDiagnosticError', { fg = carbon.base10, bg = carbon.layer1, bold = true })
vim.api.nvim_set_hl(0, 'TelescopeBorder', { fg = carbon.blend, bg = carbon.blend })
vim.api.nvim_set_hl(0, 'TelescopePromptBorder', { fg = carbon.text, bg = carbon.text })
vim.api.nvim_set_hl(0, 'TelescopePromptNormal', { fg = carbon.base05, bg = carbon.text })
vim.api.nvim_set_hl(0, 'TelescopePromptPrefix', { fg = carbon.purple, bg = carbon.text })
vim.api.nvim_set_hl(0, 'TelescopeNormal', { fg = carbon.none, bg = carbon.blend })
vim.api.nvim_set_hl(0, 'TelescopePreviewTitle', { fg = carbon.text, bg = carbon.base12 })
vim.api.nvim_set_hl(0, 'TelescopePromptTitle', { fg = carbon.text, bg = carbon.base11 })
vim.api.nvim_set_hl(0, 'TelescopeResultsTitle', { fg = carbon.blend, bg = carbon.blend })
vim.api.nvim_set_hl(0, 'TelescopeSelection', { fg = carbon.none, bg = carbon.text })
vim.api.nvim_set_hl(0, 'TelescopePreviewLine', { fg = carbon.none, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'TelescopeMatching', { fg = carbon.purple, bg = carbon.none, bold = true, italic = true })
vim.api.nvim_set_hl(0, 'NotifyERRORBorder', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyWARNBorder', { fg = carbon.base14, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyINFOBorder', { fg = carbon.base05, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyDEBUGBorder', { fg = carbon.base13, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyTRACEBorder', { fg = carbon.base13, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyERRORIcon', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyWARNIcon', { fg = carbon.base14, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyINFOIcon', { fg = carbon.base05, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyDEBUGIcon', { fg = carbon.base13, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyTRACEIcon', { fg = carbon.base13, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyERRORTitle', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyWARNTitle', { fg = carbon.base14, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyINFOTitle', { fg = carbon.base05, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyDEBUGTitle', { fg = carbon.base13, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NotifyTRACETitle', { fg = carbon.base13, bg = carbon.none })
vim.api.nvim_set_hl(0, 'CmpItemAbbr', { fg = '#adadad', bg = carbon.none })
vim.api.nvim_set_hl(0, 'CmpItemAbbrMatch', { fg = carbon.base05, bg = carbon.none, bold = true })
vim.api.nvim_set_hl(0, 'CmpItemAbbrMatchFuzzy', { fg = carbon.brightish_whitish, bg = carbon.none, bold = true })
vim.api.nvim_set_hl(0, 'CmpItemMenu', { fg = carbon.brightish_whitish, bg = carbon.none, italic = true })
vim.api.nvim_set_hl(0, 'CmpItemKindInterface', { fg = carbon.layer2, bg = carbon.purple })
vim.api.nvim_set_hl(0, 'CmpItemKindColor', { fg = carbon.layer2, bg = carbon.purple })
vim.api.nvim_set_hl(0, 'CmpItemKindTypeParameter', { fg = carbon.layer2, bg = carbon.purple })
vim.api.nvim_set_hl(0, 'CmpItemKindText', { fg = carbon.layer2, bg = carbon.pinkish })
vim.api.nvim_set_hl(0, 'CmpItemKindEnum', { fg = carbon.layer2, bg = carbon.pinkish })
vim.api.nvim_set_hl(0, 'CmpItemKindKeyword', { fg = carbon.layer2, bg = carbon.pinkish })
vim.api.nvim_set_hl(0, 'CmpItemKindConstant', { fg = carbon.layer2, bg = carbon.base10 })
vim.api.nvim_set_hl(0, 'CmpItemKindConstructor', { fg = carbon.layer2, bg = carbon.base10 })
vim.api.nvim_set_hl(0, 'CmpItemKindReference', { fg = carbon.layer2, bg = carbon.base10 })
vim.api.nvim_set_hl(0, 'CmpItemKindFunction', { fg = carbon.layer2, bg = carbon.base11 })
vim.api.nvim_set_hl(0, 'CmpItemKindStruct', { fg = carbon.layer2, bg = carbon.base11 })
vim.api.nvim_set_hl(0, 'CmpItemKindClass', { fg = carbon.layer2, bg = carbon.base11 })
vim.api.nvim_set_hl(0, 'CmpItemKindModule', { fg = carbon.layer2, bg = carbon.base11 })
vim.api.nvim_set_hl(0, 'CmpItemKindOperator', { fg = carbon.layer2, bg = carbon.base11 })
vim.api.nvim_set_hl(0, 'CmpItemKindField', { fg = carbon.layer2, bg = carbon.base12 })
vim.api.nvim_set_hl(0, 'CmpItemKindProperty', { fg = carbon.layer2, bg = carbon.base12 })
vim.api.nvim_set_hl(0, 'CmpItemKindEvent', { fg = carbon.layer2, bg = carbon.base12 })
vim.api.nvim_set_hl(0, 'CmpItemKindUnit', { fg = carbon.layer2, bg = carbon.base13 })
vim.api.nvim_set_hl(0, 'CmpItemKindSnippet', { fg = carbon.layer2, bg = carbon.base13 })
vim.api.nvim_set_hl(0, 'CmpItemKindFolder', { fg = carbon.layer2, bg = carbon.base13 })
vim.api.nvim_set_hl(0, 'CmpItemKindVariable', { fg = carbon.layer2, bg = carbon.base14 })
vim.api.nvim_set_hl(0, 'CmpItemKindFile', { fg = carbon.layer2, bg = carbon.base14 })
vim.api.nvim_set_hl(0, 'CmpItemKindMethod', { fg = carbon.layer2, bg = carbon.base15 })
vim.api.nvim_set_hl(0, 'CmpItemKindValue', { fg = carbon.layer2, bg = carbon.base15 })
vim.api.nvim_set_hl(0, 'CmpItemKindEnumMember', { fg = carbon.layer2, bg = carbon.base15 })
vim.api.nvim_set_hl(0, 'NvimTreeImageFile', { fg = carbon.base12, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NvimTreeFolderIcon', { fg = carbon.base12, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NvimTreeWinSeparator', { fg = carbon.layer1, bg = carbon.layer1 })
vim.api.nvim_set_hl(0, 'NvimTreeFolderName', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NvimTreeIndentMarker', { fg = carbon.text, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NvimTreeEmptyFolderName', { fg = carbon.base15, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NvimTreeOpenedFolderName', { fg = carbon.base15, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NvimTreeNormal', { fg = carbon.brightish_whitish, bg = carbon.layer1 })
vim.api.nvim_set_hl(0, 'NeogitBranch', { fg = carbon.base10, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NeogitRemote', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'NeogitHunkHeader', { fg = carbon.brightish_whitish, bg = carbon.text })
vim.api.nvim_set_hl(0, 'NeogitHunkHeaderHighlight', { fg = carbon.brightish_whitish, bg = carbon.text_sec })
vim.api.nvim_set_hl(0, 'HydraRed', { fg = carbon.base12, bg = carbon.none })
vim.api.nvim_set_hl(0, 'HydraBlue', { fg = carbon.pinkish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'HydraAmaranth', { fg = carbon.base10, bg = carbon.none })
vim.api.nvim_set_hl(0, 'HydraTeal', { fg = carbon.purple, bg = carbon.none })
vim.api.nvim_set_hl(0, 'HydraHint', { fg = carbon.none, bg = carbon.blend })
vim.api.nvim_set_hl(0, 'alpha1', { fg = carbon.text_sec, bg = carbon.none })
vim.api.nvim_set_hl(0, 'alpha2', { fg = carbon.brightish_whitish, bg = carbon.none })
vim.api.nvim_set_hl(0, 'alpha3', { fg = carbon.text_sec, bg = carbon.none })
vim.api.nvim_set_hl(0, 'CodeBlock', { fg = carbon.none, bg = carbon.layer2 })
vim.api.nvim_set_hl(0, 'BufferLineDiagnostic', { fg = carbon.base10, bg = carbon.none, bold = true })
vim.api.nvim_set_hl(0, 'BufferLineDiagnosticVisible', { fg = carbon.base10, bg = carbon.none, bold = true })
vim.api.nvim_set_hl(0, 'htmlH1', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'mkdRule', { link = 'markdownRule' })
vim.api.nvim_set_hl(0, 'mkdListItem', { link = 'markdownListMarker' })
vim.api.nvim_set_hl(0, 'mkdListItemCheckbox', { link = 'markdownListMarker' })
vim.api.nvim_set_hl(0, 'VimwikiHeader1', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'VimwikiHeader2', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'VimwikiHeader3', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'VimwikiHeader4', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'VimwikiHeader5', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'VimwikiHeader6', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'VimwikiHeaderChar', { link = 'markdownH1' })
vim.api.nvim_set_hl(0, 'VimwikiList', { link = 'markdownListMarker' })
vim.api.nvim_set_hl(0, 'VimwikiLink', { link = 'markdownUrl' })
vim.api.nvim_set_hl(0, 'VimwikiCode', { link = 'markdownCode' })
return { palette = carbon }
